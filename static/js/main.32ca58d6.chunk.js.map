{"version":3,"sources":["assets/Tileable_Red_Brick_Texturise_NORMAL.jpg","assets/Tileable_Red_Brick_Texturise.jpg","components/palette/Palette.tsx","components/panel/Panel.tsx","components/app/App.tsx","index.tsx","components/palette/Palette.module.scss","components/app/App.module.scss","components/panel/Panel.module.scss"],"names":["Palette","props","strokeColor","setStrokeColor","strokeWidth","setStrokeWidth","clearDrawing","saveDrawing","useState","showModal","setShowModal","className","styles","palette","onChange","color","hex","colors","colorPicker","Form","Group","controlId","strokePicker","Label","Control","type","min","max","custom","value","event","target","Button","variant","onClick","Modal","show","onHide","centered","Header","closeButton","Title","Body","Footer","normalize","vector","magnitude","Math","sqrt","reduce","acc","v","map","it","dot","v1","v2","sum","i","length","interpolation","p1","p2","step","points","dist","dx","x","dy","y","distance","theta","atan2","angle","push","sin","cos","Panel","dpr","window","devicePixelRatio","canvasWidth","canvasHeight","divRef","useRef","canvas","document","createElement","drawingLayer","normalImage","wallImage","diffuse","setDiffuse","shading","setShading","specular","setSpecular","mouseDown","setMouseDown","width","floor","height","canvasSize","prev","current","mousePosition","_setMousePosition","setMousePosition","useCallback","throttle","useEffect","appendChild","setAttribute","src","normal","onload","memCanvas","context","getContext","drawingContext","pattern","createPattern","fillStyle","fillRect","imageData","getImageData","data","dotProducts","dotReflection","unitL","unitV","unitN","dotLN","r","a","dotRV","pow","putImageData","lineCap","drawingImageData","drawingData","wall","onpointermove","ev","preventDefault","rect","getBoundingClientRect","scaleX","scaleY","clientX","left","clientY","top","ontouchmove","touches","onpointerdown","onMouseExit","ontouchend","onpointerup","canvasContext","canvasImageData","canvasData","forEach","blob","createRadialGradient","addColorStop","alpha","xp","yp","xc","yc","t","i_s","i_d","g","b","panel","canvasContainer","ref","link","href","toDataURL","replace","download","body","click","removeChild","App","Container","appContainer","appHeader","screen","ReactDOM","render","StrictMode","exact","path","component","getElementById","module","exports"],"mappings":"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","file":"static/js/main.32ca58d6.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Tileable_Red_Brick_Texturise_NORMAL.13f500e2.jpg\";","export default __webpack_public_path__ + \"static/media/Tileable_Red_Brick_Texturise.fdc6adbf.jpg\";","import React, { Dispatch, FC, SetStateAction, useState } from \"react\";\nimport styles from \"./Palette.module.scss\";\nimport { CompactPicker } from \"react-color\";\nimport { Button, Form, Modal } from \"react-bootstrap\";\n\ninterface PaletteTypes {\n  strokeColor: string,\n  setStrokeColor: Dispatch<SetStateAction<string>>\n  strokeWidth: number,\n  setStrokeWidth: Dispatch<SetStateAction<number>>\n  clearDrawing: () => void,\n  saveDrawing: () => void\n}\n\nconst Palette: FC<PaletteTypes> = props => {\n\n  // eslint-disable-next-line react/prop-types\n  const { strokeColor, setStrokeColor, strokeWidth, setStrokeWidth, clearDrawing, saveDrawing } = props;\n\n  const colors = [\n    \"#000000\",\n    \"#ffffff\",\n    \"#d00000\",\n    \"#ea8c00\",\n    \"#eac300\",\n    \"#00a000\",\n    \"#b7ea00\",\n    \"#0000c0\",\n    \"#00c7ea\",\n    \"#7500ea\",\n    \"#bf00ea\",\n    \"#ea00b0\",\n    \"#555555\",\n    \"#d2d2d2\",\n    \"#ffc6c6\",\n    \"#ffd999\",\n    \"#fff0ab\",\n    \"#adffad\",\n    \"#ecffb2\",\n    \"#9ad7ff\",\n    \"#9affe8\",\n    \"#9d9aff\",\n    \"#e4a8f3\",\n    \"#ff9ae6\"\n  ];\n\n  const [showModal, setShowModal] = useState(false);\n\n  return (\n    <div className={styles.palette}>\n      <CompactPicker onChange={color => setStrokeColor(color.hex)} color={strokeColor} colors={colors} className={styles.colorPicker}/>\n      <Form>\n        <Form.Group controlId=\"strokeWidth\" className={styles.strokePicker}>\n          <Form.Label>Stroke Width: {strokeWidth}</Form.Label>\n          <Form.Control type=\"range\" min={5} max={60} custom value={strokeWidth} onChange={event => setStrokeWidth(+event.target.value)}/>\n        </Form.Group>\n      </Form>\n      <Button type=\"button\" variant=\"danger\" onClick={() => setShowModal(true)}>Clear Drawing</Button>\n      <Button type=\"button\" onClick={saveDrawing}>Save Drawing</Button>\n      <Modal show={showModal} onHide={() => setShowModal(false)} centered>\n        <Modal.Header closeButton>\n          <Modal.Title>Clear Drawing</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>Are you sure you want to clear the current drawing? This action cannot be undone.</Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={() => setShowModal(false)}>\n            Close\n          </Button>\n          <Button variant=\"danger\" onClick={() => {\n            clearDrawing();\n            setShowModal(false);\n          }}>\n            Clear Drawing\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </div>\n  );\n};\n\nexport default Palette;\n","import React, { FC, useCallback, useEffect, useRef, useState } from \"react\";\nimport normal from \"../../assets/Tileable_Red_Brick_Texturise_NORMAL.jpg\";\nimport wall from \"../../assets/Tileable_Red_Brick_Texturise.jpg\";\nimport throttle from \"lodash.throttle\";\nimport alpha from \"color-alpha\";\nimport styles from \"./Panel.module.scss\";\nimport Palette from \"../palette/Palette\";\n\ninterface Point2D {\n  x: number,\n  y: number\n}\n\nfunction normalize(vector: number[]): number[] {\n  const magnitude = Math.sqrt(vector.reduce((acc, v) => acc + (v * v), 0));\n  return vector.map(it => it / magnitude);\n}\n\nfunction dot(v1: number[], v2: number[]): number {\n  let sum = 0;\n  for (let i = 0; i < v1.length; i++) {\n    sum += v1[i] * v2[i];\n  }\n  return sum;\n}\n\nfunction distance(p1: Point2D, p2: Point2D): number {\n  const dx = p2.x - p1.x;\n  const dy = p2.y - p1.y;\n  return Math.sqrt(dx * dx + dy * dy);\n}\n\nfunction angle(p1: Point2D, p2: Point2D): number {\n  return Math.atan2(p2.x - p1.x, p2.y - p1.y);\n}\n\nfunction interpolation(p1: Point2D, p2: Point2D, step: number): Point2D[] {\n  const points: Point2D[] = [];\n  const dist = distance(p1, p2);\n  const theta = angle(p1, p2);\n  const { x, y } = p1;\n  for (let i = 0; i < dist; i += step) {\n    points.push({ x: x + Math.sin(theta) * i, y: y + Math.cos(theta) * i });\n  }\n  return points;\n}\n\ninterface PanelProps {\n  canvasWidth: number\n  canvasHeight: number\n}\n\nconst Panel: FC<PanelProps> = props => {\n\n  const dpr = window.devicePixelRatio;\n\n  // eslint-disable-next-line react/prop-types\n  const { canvasWidth, canvasHeight } = props;\n\n  const divRef = useRef<HTMLDivElement>(null);\n\n  const canvas = useRef(document.createElement(\"canvas\"));\n\n  const drawingLayer = useRef(document.createElement(\"canvas\"));\n\n  const normalImage = useRef(document.createElement(\"img\"));\n\n  const wallImage = useRef(document.createElement(\"img\"));\n\n  const [diffuse, setDiffuse] = useState<Uint8ClampedArray | null>(null);\n\n  const [shading, setShading] = useState<number[]>([]);\n\n  const [specular, setSpecular] = useState<number[]>([]);\n\n  const [mouseDown, setMouseDown] = useState(false);\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const [canvasSize, setCanvasSize] = useState({\n    width: Math.floor(canvasWidth * dpr),\n    height: Math.floor(canvasHeight * dpr)\n  });\n\n  const [strokeColor, setStrokeColor] = useState(\"#9AFFE8\");\n\n  const [strokeWidth, setStrokeWidth] = useState(40);\n\n  const [mousePosition, _setMousePosition] = useState<{ prev: Point2D | null, current: Point2D | null }>({\n    prev: null,\n    current: null\n  });\n\n  const setMousePosition = useCallback(throttle(_setMousePosition, 20), []);\n\n  function clearDrawing() {\n\n    if (!diffuse) return;\n\n    const { width, height } = canvasSize;\n\n    const drawingContext = drawingLayer.current.getContext(\"2d\");\n    const canvasContext = canvas.current.getContext(\"2d\");\n    if (!drawingContext || !canvasContext) return;\n\n    const drawingImageData = drawingContext.getImageData(0, 0, width, height);\n    const { data: drawingData } = drawingImageData;\n    const canvasImageData = canvasContext.getImageData(0, 0, width, height);\n    const { data: canvasData } = canvasImageData;\n\n    for (let i = 0; i < drawingData.length; i++) {\n      drawingData[i] = 0;\n    }\n\n    drawingContext.putImageData(drawingImageData, 0, 0, 0, 0, width, height);\n\n    for (let i = 0; i < diffuse.length; i++) {\n      canvasData[i] = diffuse[i];\n    }\n\n    canvasContext.putImageData(canvasImageData, 0, 0, 0, 0, width, height);\n  }\n\n  function saveDrawing() {\n    const link = document.createElement(\"a\");\n    link.href = canvas.current.toDataURL(\"image/png\")\n      .replace(\"data:image/png\", \"data:application/octet-stream\");\n    link.download = \"drawing.png\";\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  }\n\n  // initialize canvas\n  useEffect(() => {\n    if (divRef.current) {\n      divRef.current?.appendChild(canvas.current);\n      const { width, height } = canvasSize;\n      canvas.current.height = height;\n      canvas.current.width = width;\n      canvas.current.setAttribute(\"style\", `width: ${width / dpr }px; max-width: 100%`);\n    }\n  }, [divRef.current]);\n\n\n  // compute shading\n  useEffect(() => {\n    normalImage.current.src = normal;\n    normalImage.current.onload = () => {\n      const memCanvas = document.createElement(\"canvas\");\n\n      const context = memCanvas.getContext(\"2d\");\n      const drawingContext = drawingLayer.current.getContext(\"2d\");\n\n      if (!context || !drawingContext) return;\n\n      const { width, height } = canvasSize;\n      memCanvas.width = width;\n      memCanvas.height = height;\n\n      const pattern = context.createPattern(normalImage.current, \"repeat\");\n\n      if (!pattern) return;\n\n      context.fillStyle = pattern;\n      context.fillRect(0, 0, width, height);\n\n\n      const imageData = context.getImageData(0, 0, width, height);\n      const { data } = imageData;\n\n      // See: https://en.wikipedia.org/wiki/Phong_reflection_model\n      const dotProducts: number[] = [];\n      const dotReflection: number[] = [];\n      const l = [1, 3, 6];\n      const unitL = normalize(l);\n      const unitV = [0, 0, 1];\n      for (let i = 0; i < data.length; i += 4) {\n        const n = [data[i] - 128, data[i + 1] - 128, data[i + 2] - 128];\n        const unitN = normalize(n);\n        const dotLN = dot(unitN, unitL);\n\n        dotProducts.push(dotLN);\n\n        const r: number[] = [];\n        for (let a = 0; a < 3; a++) {\n          r[a] = 2 * dotLN * (unitN[a] - unitL[a]);\n        }\n        const unitR = normalize(r);\n        const dotRV = dot(unitR, unitV);\n\n        dotReflection.push(Math.pow(dotRV, 3));\n\n        data[i] = Math.floor(dotLN * 255);\n        data[i + 1] = Math.floor(dotLN * 255);\n        data[i + 2] = Math.floor(dotLN * 255);\n      }\n\n      setShading(dotProducts);\n      setSpecular(dotReflection);\n\n      drawingLayer.current.width = width;\n      drawingLayer.current.height = height;\n\n      drawingContext.putImageData(imageData, 0, 0);\n      drawingContext.lineCap = \"round\";\n      const drawingImageData = drawingContext.getImageData(0, 0, width, height);\n      const { data: drawingData } = drawingImageData;\n\n      for (let i = 0; i < drawingData.length; i += 4) {\n        drawingData[i + 3] = 0;\n      }\n\n      drawingContext.putImageData(drawingImageData, 0, 0, 0, 0, width, height);\n    };\n\n  }, [canvasSize]);\n\n  // compute diffuse (texture)\n  useEffect(() => {\n    wallImage.current.src = wall;\n    wallImage.current.onload = () => {\n      const memCanvas = document.createElement(\"canvas\");\n      const context = memCanvas.getContext(\"2d\");\n\n      if (!context) return;\n\n      const { width, height } = canvasSize;\n      memCanvas.width = width;\n      memCanvas.height = height;\n\n      const pattern = context.createPattern(wallImage.current, \"repeat\");\n\n      if (!pattern) return;\n\n      context.fillStyle = pattern;\n      context.fillRect(0, 0, width, height);\n\n      const imageData = context.getImageData(0, 0, width, height);\n      setDiffuse(imageData.data);\n    };\n  }, [canvasSize]);\n\n  // update mouse location\n  useEffect(() => {\n    canvas.current.onpointermove = ev => {\n      ev.preventDefault();\n      if (mouseDown) {\n        const rect = canvas.current.getBoundingClientRect();\n        const scaleX = canvas.current.width / rect.width;\n        const scaleY = canvas.current.height / rect.height;\n\n        setMousePosition(({ current }) => {\n          return {\n            prev: current,\n            current: {\n              x: Math.floor((ev.clientX - rect.left) * scaleX),\n              y: Math.floor((ev.clientY - rect.top) * scaleY)\n            }\n          };\n        });\n      }\n    };\n\n    canvas.current.ontouchmove = ev => {\n      ev.preventDefault();\n      if (mouseDown) {\n        const rect = canvas.current.getBoundingClientRect();\n        const scaleX = canvas.current.width / rect.width;\n        const scaleY = canvas.current.height / rect.height;\n        const x = ev.touches[0].clientX;\n        const y = ev.touches[0].clientY;\n\n        setMousePosition(({ current }) => {\n          return {\n            prev: current,\n            current: {\n              x: Math.floor((x - rect.left) * scaleX),\n              y: Math.floor((y - rect.top) * scaleY)\n            }\n          };\n        });\n      }\n    };\n\n\n  }, [canvas.current, mouseDown]);\n\n  useEffect(() => {\n    const onMouseDown = (ev: PointerEvent) => {\n      ev.preventDefault();\n      setMouseDown(true);\n    };\n\n    canvas.current.onpointerdown = onMouseDown;\n\n    const onMouseExit = (ev: PointerEvent | TouchEvent) => {\n      ev.preventDefault();\n      setMouseDown(false);\n      setMousePosition(({ current }) => {\n        return {\n          prev: current,\n          current: null\n        };\n      });\n    };\n\n    canvas.current.ontouchend = onMouseExit;\n    canvas.current.onpointerup = onMouseExit;\n  }, []);\n\n  // put shaded texture onto canvas\n  useEffect(() => {\n    const canvasContext = canvas.current.getContext(\"2d\");\n\n    if (shading.length === 0 || !diffuse || !canvasContext) return;\n\n    const { width, height } = canvasSize;\n    const canvasImageData = canvasContext.getImageData(0, 0, width, height);\n    const { data: canvasData } = canvasImageData;\n\n    for (let i = 0; i < diffuse.length / 4; i++) {\n      diffuse[i * 4] = diffuse[i * 4] * shading[i];\n      diffuse[i * 4 + 1] = diffuse[i * 4 + 1] * shading[i];\n      diffuse[i * 4 + 2] = diffuse[i * 4 + 2] * shading[i];\n    }\n\n    for (let i = 0; i < diffuse.length; i++) {\n      canvasData[i] = diffuse[i];\n    }\n\n    canvasContext.putImageData(canvasImageData, 0, 0, 0, 0, width, height);\n\n  }, [shading, diffuse]);\n\n  // draw and shade\n  useEffect(() => {\n    const drawingContext = drawingLayer.current.getContext(\"2d\");\n    const canvasContext = canvas.current.getContext(\"2d\");\n\n    if (!drawingContext || !canvasContext) return;\n\n    if (mousePosition.prev && mousePosition.current && diffuse) {\n      const { prev, current } = mousePosition;\n      // See: http://perfectionkills.com/exploring-canvas-drawing-techniques/\n      interpolation(prev, current, strokeWidth / 4).forEach(({x, y}) => {\n        const blob = drawingContext.createRadialGradient(x, y, 0, x, y, strokeWidth);\n\n        blob.addColorStop(0, strokeColor);\n        blob.addColorStop(0.5, alpha(strokeColor, 0.3));\n        blob.addColorStop(1, alpha(strokeColor, 0.0));\n        drawingContext.fillStyle = blob;\n        drawingContext.fillRect(x - strokeWidth, y - strokeWidth, strokeWidth * 2, strokeWidth * 2);\n      });\n      const { x: xp, y: yp } = prev;\n      const { x: xc, y: yc } = current;\n\n      const x1 = xp < xc ? xp : xc;\n      const y1 = yp < yc ? yp : yc;\n\n      const x2 = xp < xc ? xc : xp;\n      const y2 = yp < yc ? yc : yp;\n\n      const x = x1 - strokeWidth;\n      const y = y1 - strokeWidth;\n      const dx = x2 - x + strokeWidth;\n      const dy = y2 - y + strokeWidth;\n\n      const { width, height } = canvasSize;\n\n      const drawingImageData = drawingContext.getImageData(0, 0, width, height);\n      const { data: drawingData } = drawingImageData;\n      const canvasImageData = canvasContext.getImageData(0, 0, width, height);\n      const { data: canvasData } = canvasImageData;\n\n      for (let t = 0; t < dx * dy; t++) {\n        const u = t % dx;\n        const v = Math.floor(t / dx);\n\n        const a = x + u;\n        const b = y + v;\n\n        const i = a + b * width;\n\n        const alpha = drawingData[i * 4 + 3] / 255;\n\n        const i_s = alpha * specular[i] * 2000;\n\n        const i_d = {\n          r: alpha * (8 + drawingData[i * 4]) * shading[i],\n          g: alpha * (8 + drawingData[i * 4 + 1]) * shading[i],\n          b: alpha * (8 + drawingData[i * 4 + 2]) * shading[i]\n        };\n\n        canvasData[i * 4] = i_d.r + i_s + (1 - alpha) * diffuse[i * 4];\n        canvasData[i * 4 + 1] = i_d.g + i_s + (1 - alpha) * diffuse[i * 4 + 1];\n        canvasData[i * 4 + 2] = i_d.b + i_s + (1 - alpha) * diffuse[i * 4 + 2];\n      }\n      canvasContext.putImageData(canvasImageData, 0, 0, 0, 0, width, height);\n    }\n  }, [drawingLayer.current, diffuse, canvas.current, mousePosition]);\n\n  return (\n    <div className={styles.panel}>\n      <div className={styles.canvasContainer} ref={divRef}>\n      </div>\n      <Palette\n        strokeColor={strokeColor}\n        setStrokeColor={setStrokeColor}\n        strokeWidth={strokeWidth}\n        setStrokeWidth={setStrokeWidth}\n        clearDrawing={clearDrawing}\n        saveDrawing={saveDrawing}\n      />\n    </div>\n  );\n};\n\nexport default Panel;\n","import React, { FC } from \"react\";\nimport styles from \"./App.module.scss\";\nimport { Container } from \"react-bootstrap\";\nimport Panel from \"../panel/Panel\";\n\nconst App: FC = () => {\n  return (\n    <Container className={styles.appContainer}>\n      <h1 className={styles.appHeader}>Wall Canvas</h1>\n      <Panel\n        canvasWidth={screen.width > 800 ? 800 : screen.width}\n        canvasHeight={screen.height - 100 > 600 ? 600 : screen.height - 100 } />\n    </Container>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./components/app/App\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <Switch>\n        <Route exact path=\"/\" component={ App } />\n      </Switch>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"palette\":\"Palette_palette__3tLi0\",\"strokePicker\":\"Palette_strokePicker__25ejT\",\"colorPicker\":\"Palette_colorPicker__1HHU9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appContainer\":\"App_appContainer__19Cyd\",\"appHeader\":\"App_appHeader__iN9K5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"panel\":\"Panel_panel__3VGf8\",\"canvasContainer\":\"Panel_canvasContainer__3gM-_\"};"],"sourceRoot":""}