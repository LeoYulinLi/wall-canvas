{"version":3,"sources":["components/panel/Panel.module.scss","assets/Tileable_Red_Brick_Texturise_NORMAL.jpg","assets/Tileable_Red_Brick_Texturise.jpg","components/panel/Panel.tsx","components/app/App.tsx","index.tsx","components/app/App.module.scss"],"names":["module","exports","Palette","props","strokeColor","setStrokeColor","strokeWidth","setStrokeWidth","clearDrawing","saveDrawing","className","styles","palette","onChange","color","hex","colors","colorPicker","Form","Group","controlId","strokePicker","Label","Control","type","min","max","custom","value","event","target","Button","variant","onClick","normalize","vector","magnitude","Math","sqrt","reduce","acc","v","map","it","dot","v1","v2","sum","i","length","interpolation","p1","p2","step","points","dist","dx","x","dy","y","distance","theta","atan2","angle","push","sin","cos","Panel","dpr","window","devicePixelRatio","canvasWidth","canvasHeight","divRef","useRef","canvas","document","createElement","drawingLayer","normalImage","wallImage","useState","diffuse","setDiffuse","shading","setShading","specular","setSpecular","mouseDown","setMouseDown","width","floor","height","canvasSize","prev","current","mousePosition","_setMousePosition","setMousePosition","useCallback","throttle","useEffect","appendChild","setAttribute","src","normal","onload","memCanvas","context","getContext","drawingContext","pattern","createPattern","fillStyle","fillRect","imageData","getImageData","data","dotProducts","dotReflection","unitL","unitV","unitN","dotLN","r","a","dotRV","pow","putImageData","lineCap","drawingImageData","drawingData","wall","onpointermove","ev","preventDefault","rect","getBoundingClientRect","scaleX","scaleY","clientX","left","clientY","top","ontouchmove","touches","onpointerdown","console","log","onMouseExit","ontouchend","onpointerup","canvasContext","canvasImageData","canvasData","forEach","blob","createRadialGradient","addColorStop","alpha","xp","yp","xc","yc","t","i_s","i_d","g","b","panel","canvasContainer","ref","link","href","toDataURL","replace","download","body","click","removeChild","App","Container","appContainer","appHeader","screen","ReactDOM","render","StrictMode","exact","path","component","getElementById"],"mappings":"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","file":"static/js/main.b299f689.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"panel\":\"Panel_panel__3VGf8\",\"canvasContainer\":\"Panel_canvasContainer__3gM-_\",\"palette\":\"Panel_palette__1ah10\",\"strokePicker\":\"Panel_strokePicker__2CgvM\",\"colorPicker\":\"Panel_colorPicker__28cFV\"};","export default __webpack_public_path__ + \"static/media/Tileable_Red_Brick_Texturise_NORMAL.13f500e2.jpg\";","export default __webpack_public_path__ + \"static/media/Tileable_Red_Brick_Texturise.fdc6adbf.jpg\";","import React, { Dispatch, FC, SetStateAction, useCallback, useEffect, useRef, useState } from \"react\";\nimport normal from \"../../assets/Tileable_Red_Brick_Texturise_NORMAL.jpg\";\nimport wall from \"../../assets/Tileable_Red_Brick_Texturise.jpg\";\nimport throttle from \"lodash.throttle\";\nimport alpha from \"color-alpha\";\nimport { CompactPicker } from \"react-color\";\nimport { Button, Form } from \"react-bootstrap\";\nimport styles from \"./Panel.module.scss\";\n\ninterface PaletteTypes {\n  strokeColor: string,\n  setStrokeColor: Dispatch<SetStateAction<string>>\n  strokeWidth: number,\n  setStrokeWidth: Dispatch<SetStateAction<number>>\n  clearDrawing: () => void,\n  saveDrawing: () => void\n}\n\nconst Palette: FC<PaletteTypes> = props => {\n\n  // eslint-disable-next-line react/prop-types\n  const { strokeColor, setStrokeColor, strokeWidth, setStrokeWidth, clearDrawing, saveDrawing } = props;\n\n  const colors = [\n    \"#000000\",\n    \"#ffffff\",\n    \"#d00000\",\n    \"#ea8c00\",\n    \"#eac300\",\n    \"#00a000\",\n    \"#b7ea00\",\n    \"#0000c0\",\n    \"#00c7ea\",\n    \"#7500ea\",\n    \"#bf00ea\",\n    \"#ea00b0\",\n    \"#555555\",\n    \"#d2d2d2\",\n    \"#ffc6c6\",\n    \"#ffd999\",\n    \"#fff0ab\",\n    \"#adffad\",\n    \"#ecffb2\",\n    \"#9ad7ff\",\n    \"#9affe8\",\n    \"#9d9aff\",\n    \"#e4a8f3\",\n    \"#ff9ae6\"\n  ];\n\n  return (\n    <div className={styles.palette}>\n      <CompactPicker onChange={color => setStrokeColor(color.hex)} color={strokeColor} colors={colors} className={styles.colorPicker}/>\n      <Form>\n        <Form.Group controlId=\"strokeWidth\" className={styles.strokePicker}>\n          <Form.Label>Stroke Width: {strokeWidth}</Form.Label>\n          <Form.Control type=\"range\" min={5} max={60} custom value={strokeWidth} onChange={event => setStrokeWidth(+event.target.value)}/>\n        </Form.Group>\n      </Form>\n      <Button type=\"button\" variant=\"danger\" onClick={clearDrawing}>Clear Drawing</Button>\n      <Button type=\"button\" onClick={saveDrawing}>Save Drawing</Button>\n    </div>\n  );\n};\n\ninterface Point2D {\n  x: number,\n  y: number\n}\n\nfunction normalize(vector: number[]): number[] {\n  const magnitude = Math.sqrt(vector.reduce((acc, v) => acc + (v * v), 0));\n  return vector.map(it => it / magnitude);\n}\n\nfunction dot(v1: number[], v2: number[]): number {\n  let sum = 0;\n  for (let i = 0; i < v1.length; i++) {\n    sum += v1[i] * v2[i];\n  }\n  return sum;\n}\n\nfunction distance(p1: Point2D, p2: Point2D): number {\n  const dx = p2.x - p1.x;\n  const dy = p2.y - p1.y;\n  return Math.sqrt(dx * dx + dy * dy);\n}\n\nfunction angle(p1: Point2D, p2: Point2D): number {\n  return Math.atan2(p2.x - p1.x, p2.y - p1.y);\n}\n\nfunction interpolation(p1: Point2D, p2: Point2D, step: number): Point2D[] {\n  const points: Point2D[] = [];\n  const dist = distance(p1, p2);\n  const theta = angle(p1, p2);\n  const { x, y } = p1;\n  for (let i = 0; i < dist; i += step) {\n    points.push({ x: x + Math.sin(theta) * i, y: y + Math.cos(theta) * i });\n  }\n  return points;\n}\n\ninterface PanelProps {\n  canvasWidth: number\n  canvasHeight: number\n}\n\nconst Panel: FC<PanelProps> = props => {\n\n  const dpr = window.devicePixelRatio;\n\n  // eslint-disable-next-line react/prop-types\n  const { canvasWidth, canvasHeight } = props;\n\n  const divRef = useRef<HTMLDivElement>(null);\n\n  const canvas = useRef(document.createElement(\"canvas\"));\n\n  const drawingLayer = useRef(document.createElement(\"canvas\"));\n\n  const normalImage = useRef(document.createElement(\"img\"));\n\n  const wallImage = useRef(document.createElement(\"img\"));\n\n  const [diffuse, setDiffuse] = useState<Uint8ClampedArray | null>(null);\n\n  const [shading, setShading] = useState<number[]>([]);\n\n  const [specular, setSpecular] = useState<number[]>([]);\n\n  const [mouseDown, setMouseDown] = useState(false);\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const [canvasSize, setCanvasSize] = useState({\n    width: Math.floor(canvasWidth * dpr),\n    height: Math.floor(canvasHeight * dpr)\n  });\n\n  const [strokeColor, setStrokeColor] = useState(\"#9AFFE8\");\n\n  const [strokeWidth, setStrokeWidth] = useState(40);\n\n  const [mousePosition, _setMousePosition] = useState<{ prev: Point2D | null, current: Point2D | null }>({\n    prev: null,\n    current: null\n  });\n\n  const setMousePosition = useCallback(throttle(_setMousePosition, 20), []);\n\n  function clearDrawing() {\n\n    if (!diffuse) return;\n\n    const { width, height } = canvasSize;\n\n    const drawingContext = drawingLayer.current.getContext(\"2d\");\n    const canvasContext = canvas.current.getContext(\"2d\");\n    if (!drawingContext || !canvasContext) return;\n\n    const drawingImageData = drawingContext.getImageData(0, 0, width, height);\n    const { data: drawingData } = drawingImageData;\n    const canvasImageData = canvasContext.getImageData(0, 0, width, height);\n    const { data: canvasData } = canvasImageData;\n\n    for (let i = 0; i < drawingData.length; i++) {\n      drawingData[i] = 0;\n    }\n\n    drawingContext.putImageData(drawingImageData, 0, 0, 0, 0, width, height);\n\n    for (let i = 0; i < diffuse.length; i++) {\n      canvasData[i] = diffuse[i];\n    }\n\n    canvasContext.putImageData(canvasImageData, 0, 0, 0, 0, width, height);\n  }\n\n  function saveDrawing() {\n    const link = document.createElement(\"a\");\n    link.href = canvas.current.toDataURL(\"image/png\")\n      .replace(\"data:image/png\", \"data:application/octet-stream\");\n    link.download = \"drawing.png\";\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  }\n\n  // initialize canvas\n  useEffect(() => {\n    if (divRef.current) {\n      divRef.current?.appendChild(canvas.current);\n      const { width, height } = canvasSize;\n      canvas.current.height = height;\n      canvas.current.width = width;\n      canvas.current.setAttribute(\"style\", `width: ${width / dpr }px; max-width: 100%`);\n    }\n  }, [divRef.current]);\n\n\n  // compute shading\n  useEffect(() => {\n    normalImage.current.src = normal;\n    normalImage.current.onload = () => {\n      const memCanvas = document.createElement(\"canvas\");\n\n      const context = memCanvas.getContext(\"2d\");\n      const drawingContext = drawingLayer.current.getContext(\"2d\");\n\n      if (!context || !drawingContext) return;\n\n      const { width, height } = canvasSize;\n      memCanvas.width = width;\n      memCanvas.height = height;\n\n      const pattern = context.createPattern(normalImage.current, \"repeat\");\n\n      if (!pattern) return;\n\n      context.fillStyle = pattern;\n      context.fillRect(0, 0, width, height);\n\n\n      const imageData = context.getImageData(0, 0, width, height);\n      const { data } = imageData;\n\n      // See: https://en.wikipedia.org/wiki/Phong_reflection_model\n      const dotProducts: number[] = [];\n      const dotReflection: number[] = [];\n      const l = [1, 3, 6];\n      const unitL = normalize(l);\n      const unitV = [0, 0, 1];\n      for (let i = 0; i < data.length; i += 4) {\n        const n = [data[i] - 128, data[i + 1] - 128, data[i + 2] - 128];\n        const unitN = normalize(n);\n        const dotLN = dot(unitN, unitL);\n\n        dotProducts.push(dotLN);\n\n        const r: number[] = [];\n        for (let a = 0; a < 3; a++) {\n          r[a] = 2 * dotLN * (unitN[a] - unitL[a]);\n        }\n        const unitR = normalize(r);\n        const dotRV = dot(unitR, unitV);\n\n        dotReflection.push(Math.pow(dotRV, 3));\n\n        data[i] = Math.floor(dotLN * 255);\n        data[i + 1] = Math.floor(dotLN * 255);\n        data[i + 2] = Math.floor(dotLN * 255);\n      }\n\n      setShading(dotProducts);\n      setSpecular(dotReflection);\n\n      drawingLayer.current.width = width;\n      drawingLayer.current.height = height;\n\n      drawingContext.putImageData(imageData, 0, 0);\n      drawingContext.lineCap = \"round\";\n      const drawingImageData = drawingContext.getImageData(0, 0, width, height);\n      const { data: drawingData } = drawingImageData;\n\n      for (let i = 0; i < drawingData.length; i += 4) {\n        drawingData[i + 3] = 0;\n      }\n\n      drawingContext.putImageData(drawingImageData, 0, 0, 0, 0, width, height);\n    };\n\n  }, [canvasSize]);\n\n  // compute diffuse (texture)\n  useEffect(() => {\n    wallImage.current.src = wall;\n    wallImage.current.onload = () => {\n      const memCanvas = document.createElement(\"canvas\");\n      const context = memCanvas.getContext(\"2d\");\n\n      if (!context) return;\n\n      const { width, height } = canvasSize;\n      memCanvas.width = width;\n      memCanvas.height = height;\n\n      const pattern = context.createPattern(wallImage.current, \"repeat\");\n\n      if (!pattern) return;\n\n      context.fillStyle = pattern;\n      context.fillRect(0, 0, width, height);\n\n      const imageData = context.getImageData(0, 0, width, height);\n      setDiffuse(imageData.data);\n    };\n  }, [canvasSize]);\n\n  // update mouse location\n  useEffect(() => {\n    canvas.current.onpointermove = ev => {\n      ev.preventDefault();\n      if (mouseDown) {\n        const rect = canvas.current.getBoundingClientRect();\n        const scaleX = canvas.current.width / rect.width;\n        const scaleY = canvas.current.height / rect.height;\n\n        setMousePosition(({ current }) => {\n          return {\n            prev: current,\n            current: {\n              x: Math.floor((ev.clientX - rect.left) * scaleX),\n              y: Math.floor((ev.clientY - rect.top) * scaleY)\n            }\n          };\n        });\n      }\n    };\n\n    canvas.current.ontouchmove = ev => {\n      ev.preventDefault();\n      if (mouseDown) {\n        const rect = canvas.current.getBoundingClientRect();\n        const scaleX = canvas.current.width / rect.width;\n        const scaleY = canvas.current.height / rect.height;\n        const x = ev.touches[0].clientX;\n        const y = ev.touches[0].clientY;\n\n        setMousePosition(({ current }) => {\n          return {\n            prev: current,\n            current: {\n              x: Math.floor((x - rect.left) * scaleX),\n              y: Math.floor((y - rect.top) * scaleY)\n            }\n          };\n        });\n      }\n    };\n\n\n  }, [canvas.current, mouseDown]);\n\n  useEffect(() => {\n    const onMouseDown = (ev: PointerEvent) => {\n      ev.preventDefault();\n      console.log(\"mousedown\");\n      setMouseDown(true);\n    };\n\n    canvas.current.onpointerdown = onMouseDown;\n\n    const onMouseExit = (ev: PointerEvent | TouchEvent) => {\n      ev.preventDefault();\n      console.log(\"mouseup\");\n      setMouseDown(false);\n      setMousePosition(({ current }) => {\n        return {\n          prev: current,\n          current: null\n        };\n      });\n    };\n\n    canvas.current.ontouchend = onMouseExit;\n    canvas.current.onpointerup = onMouseExit;\n  }, []);\n\n  // put shaded texture onto canvas\n  useEffect(() => {\n    const canvasContext = canvas.current.getContext(\"2d\");\n\n    if (shading.length === 0 || !diffuse || !canvasContext) return;\n\n    const { width, height } = canvasSize;\n    const canvasImageData = canvasContext.getImageData(0, 0, width, height);\n    const { data: canvasData } = canvasImageData;\n\n    for (let i = 0; i < diffuse.length / 4; i++) {\n      diffuse[i * 4] = diffuse[i * 4] * shading[i];\n      diffuse[i * 4 + 1] = diffuse[i * 4 + 1] * shading[i];\n      diffuse[i * 4 + 2] = diffuse[i * 4 + 2] * shading[i];\n    }\n\n    for (let i = 0; i < diffuse.length; i++) {\n      canvasData[i] = diffuse[i];\n    }\n\n    canvasContext.putImageData(canvasImageData, 0, 0, 0, 0, width, height);\n\n  }, [shading, diffuse]);\n\n  // draw and shade\n  useEffect(() => {\n    const drawingContext = drawingLayer.current.getContext(\"2d\");\n    const canvasContext = canvas.current.getContext(\"2d\");\n\n    if (!drawingContext || !canvasContext) return;\n\n    if (mousePosition.prev && mousePosition.current && diffuse) {\n      const { prev, current } = mousePosition;\n      // See: http://perfectionkills.com/exploring-canvas-drawing-techniques/\n      interpolation(prev, current, strokeWidth / 4).forEach(({x, y}) => {\n        const blob = drawingContext.createRadialGradient(x, y, 0, x, y, strokeWidth);\n\n        blob.addColorStop(0, strokeColor);\n        blob.addColorStop(0.5, alpha(strokeColor, 0.3));\n        blob.addColorStop(1, alpha(strokeColor, 0.0));\n        drawingContext.fillStyle = blob;\n        drawingContext.fillRect(x - strokeWidth, y - strokeWidth, strokeWidth * 2, strokeWidth * 2);\n      });\n      const { x: xp, y: yp } = prev;\n      const { x: xc, y: yc } = current;\n\n      const x1 = xp < xc ? xp : xc;\n      const y1 = yp < yc ? yp : yc;\n\n      const x2 = xp < xc ? xc : xp;\n      const y2 = yp < yc ? yc : yp;\n\n      const x = x1 - strokeWidth;\n      const y = y1 - strokeWidth;\n      const dx = x2 - x + strokeWidth;\n      const dy = y2 - y + strokeWidth;\n\n      const { width, height } = canvasSize;\n\n      const drawingImageData = drawingContext.getImageData(0, 0, width, height);\n      const { data: drawingData } = drawingImageData;\n      const canvasImageData = canvasContext.getImageData(0, 0, width, height);\n      const { data: canvasData } = canvasImageData;\n\n      for (let t = 0; t < dx * dy; t++) {\n        const u = t % dx;\n        const v = Math.floor(t / dx);\n\n        const a = x + u;\n        const b = y + v;\n\n        const i = a + b * width;\n\n        const alpha = drawingData[i * 4 + 3] / 255;\n\n        const i_s = alpha * specular[i] * 2000;\n\n        const i_d = {\n          r: alpha * (8 + drawingData[i * 4]) * shading[i],\n          g: alpha * (8 + drawingData[i * 4 + 1]) * shading[i],\n          b: alpha * (8 + drawingData[i * 4 + 2]) * shading[i]\n        };\n\n        canvasData[i * 4] = i_d.r + i_s + (1 - alpha) * diffuse[i * 4];\n        canvasData[i * 4 + 1] = i_d.g + i_s + (1 - alpha) * diffuse[i * 4 + 1];\n        canvasData[i * 4 + 2] = i_d.b + i_s + (1 - alpha) * diffuse[i * 4 + 2];\n      }\n      canvasContext.putImageData(canvasImageData, 0, 0, 0, 0, width, height);\n    }\n  }, [drawingLayer.current, diffuse, canvas.current, mousePosition]);\n\n  return (\n    <div className={styles.panel}>\n      <div className={styles.canvasContainer} ref={divRef}>\n      </div>\n      <Palette\n        strokeColor={strokeColor}\n        setStrokeColor={setStrokeColor}\n        strokeWidth={strokeWidth}\n        setStrokeWidth={setStrokeWidth}\n        clearDrawing={clearDrawing}\n        saveDrawing={saveDrawing}\n      />\n    </div>\n  );\n};\n\nexport default Panel;\n","import React, { FC } from \"react\";\nimport styles from \"./App.module.scss\";\nimport { Container } from \"react-bootstrap\";\nimport Panel from \"../panel/Panel\";\n\nconst App: FC = () => {\n  return (\n    <Container className={styles.appContainer}>\n      <h1 className={styles.appHeader}>Wall Canvas</h1>\n      <Panel\n        canvasWidth={screen.width > 800 ? 800 : screen.width}\n        canvasHeight={screen.height - 100 > 600 ? 600 : screen.height - 100 } />\n    </Container>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./components/app/App\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <Switch>\n        <Route exact path=\"/\" component={ App } />\n      </Switch>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appContainer\":\"App_appContainer__19Cyd\",\"appHeader\":\"App_appHeader__iN9K5\"};"],"sourceRoot":""}